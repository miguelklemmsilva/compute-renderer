name: Build and Release

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*"
  pull_request:
    branches: [ "main" ]

jobs:
  build-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cargo build
        run: cargo build --release

      - name: Package binary + assets (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir -p artifacts
          cp -r assets artifacts/assets
          cp target/release/compute-renderer artifacts/
          cd artifacts
          zip -r compute-renderer-${{ matrix.os }}.zip compute-renderer assets

      - name: Package binary + assets (Windows)
        if: runner.os == 'Windows'
        run: |
          powershell -Command "
            New-Item -ItemType Directory -Force -Path artifacts;
            Copy-Item -Recurse -Force assets artifacts\assets;
            Copy-Item target\release\compute-renderer.exe artifacts\;
            Compress-Archive -Path artifacts\* -DestinationPath artifacts\compute-renderer-windows-latest.zip;
          "

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: compute-renderer-${{ matrix.os }}
          path: artifacts/*.zip

  create-release:
    needs: build-matrix
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./release-binaries

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          releaseName: ${{ github.ref_name }}
          body: "Automated release for ${{ github.ref_name }}."
          draft: false
          prerelease: false
          artifacts: |
            release-binaries/**/*.zip