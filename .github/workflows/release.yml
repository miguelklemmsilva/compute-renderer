name: Build and Release

on:
  # 1) Trigger on pushing to main (so you can see builds even without tagging)
  push:
    branches: [ "main" ]
    tags:
      - "v*"       # Any tag starting with "v" (e.g., v1.0.0) will trigger a release
  # 2) Optionally trigger on pull requests
  pull_request:
    branches: [ "main" ]

jobs:
  # -----------------------------------------------------------
  # 1) Build job for each OS (Windows, macOS, Linux)
  # -----------------------------------------------------------
  build-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      # Check out the repository code
      - name: Check out code
        uses: actions/checkout@v3

      # Install Rust toolchain
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      # Build in release mode
      - name: Cargo build
        run: cargo build --release

      # Create artifacts folder + bundle the binary + assets
      - name: Package binary + assets
        run: |
          # Cross-platform logic: Windows vs. non-Windows
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            # On Windows, use PowerShell's Compress-Archive
            # (The path separator is \ and the binary is .exe)
            powershell -Command "
              New-Item -ItemType Directory -Force -Path artifacts;
              Copy-Item -Recurse -Force assets artifacts\assets;
              Copy-Item target\release\compute-renderer.exe artifacts\;
              Compress-Archive -Path artifacts\* -DestinationPath artifacts\compute-renderer-windows-latest.zip;
            "
          else
            # On Linux/macOS, use zip
            mkdir -p artifacts
            cp -r assets artifacts/assets
            cp target/release/compute-renderer artifacts/
            cd artifacts
            zip -r compute-renderer-${{ matrix.os }}.zip compute-renderer assets
          fi

      # Upload artifacts for each OS build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: compute-renderer-${{ matrix.os }}
          path: artifacts/*.zip

  # -----------------------------------------------------------
  # 2) Create Release job (only runs if a tag is pushed)
  # -----------------------------------------------------------
  create-release:
    needs: build-matrix            # Wait until all builds complete
    runs-on: ubuntu-latest

    # Only create a release if this workflow was triggered by a tag push:
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./release-binaries

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # Tag that triggered this workflow (e.g., 'v1.0.0')
          tag: ${{ github.ref_name }}
          releaseName: ${{ github.ref_name }}
          body: "Automated release for ${{ github.ref_name }}."
          draft: false
          prerelease: false
          # Upload all zip files from the build step
          artifacts: |
            release-binaries/**/*.zip